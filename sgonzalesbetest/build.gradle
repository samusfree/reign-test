plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.graalvm.buildtools.native' version '0.9.28'
	id 'jacoco'
}

group = 'com.reign.sgonzales.betest'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

test {
	finalizedBy jacocoTestReport
}

nativeTest {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn nativeTest
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/nisum/testnisum/configuration/**",
					"com/nisum/testnisum/data/**",
					"com/nisum/testnisum/security/CustomUserDetails.class",
					"com/nisum/testnisum/dto/**",
					"com/nisum/testnisum/TestnisumApplication.class"
			])
		}))
	}
}
